Перем мсИБконн;
Перем деревоНастроек Экспорт;
Перем либ;
Перем БазовыйКаталог Экспорт;
//Перем мМенеджерКластера;


Процедура Инициализация()
	ФайлСкрипта = Новый Файл(ТекущийСценарий().Источник);
	БазовыйКаталог = ФайлСкрипта.Путь+"..";
	ПодключитьСценарий(БазовыйКаталог+"\scripts\lib_main.os", "lib");
	либ = Новый lib();


	Если АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "ENCODE"
		Тогда
		Источник = Новый Файл(АргументыКоманднойСтроки[1]);
		Результат = Новый ЗаписьТекста(АргументыКоманднойСтроки[2], КодировкаТекста.UTF8);
		Если Не Источник.Существует() Тогда
			Сообщить("Файл """+Источник.ПолноеИмя+""" не существует");
			Справка();
			Иначе
			Тхт = Новый ЧтениеТекста(Источник.ПолноеИмя, КодировкаТекста.UTF8);
			Сообщить("encoding...");
			Результат.Записать(либ.Энкоде13(Тхт.Прочитать()));
			Результат.Закрыть();
			exit(0);
		КонецЕсли;
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "DECODE"
		Тогда
		Источник = Новый Файл(АргументыКоманднойСтроки[1]);
		Результат = Новый ЗаписьТекста(АргументыКоманднойСтроки[2], КодировкаТекста.UTF8);
		Если Не Источник.Существует() Тогда
			Сообщить("Файл """+Источник.ПолноеИмя+""" не существует");
			Справка();
			Иначе
			Тхт = Новый ЧтениеТекста(Источник.ПолноеИмя, КодировкаТекста.UTF8);
			Сообщить("decoding...");
			Результат.Записать(либ.Декоде13(Тхт.Прочитать()));
			Результат.Закрыть();
			exit(0);
		КонецЕсли;
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "BOTH"
		Тогда
		Источник = Новый Файл(АргументыКоманднойСтроки[1]);
		Результат = Новый ЗаписьТекста(АргументыКоманднойСтроки[2], КодировкаТекста.UTF8);
		Если Не Источник.Существует() Тогда
			Сообщить("Файл """+Источник.ПолноеИмя+""" не существует");
			Справка();
			Иначе
			Тхт = Новый ЧтениеТекста(Источник.ПолноеИмя, КодировкаТекста.UTF8);
			Сообщить("encoding/decoding...");
			Результат.Записать(либ.Декоде13(либ.Энкоде13(Тхт.Прочитать())));
			Результат.Закрыть();
			exit(0);
		КонецЕсли;
	Иначе
		Справка();
	КонецЕсли;	
	либ.Инициализировать(ЭтотОбъект);
	
	
	// Если мМенеджерКластера = Неопределено Тогда
		// ПодключитьСценарий("cluster_manager.os", "МенеджерКластера");
		// мМенеджерКластера = Новый МенеджерКластера();
		// мМенеджерКластера.Инициализировать(ЭтотОбъект);
	// КонецЕсли;
//Сообщить(деревоНастроек.Количество());
КонецПроцедуры

Функция Настройки() Экспорт
	// Настройки = Новый ТаблицаЗначений;
	// Настройки.Колонки.Добавить("ПутьНастройки");
	// Настройки.Колонки.Добавить("ЗначениеНастройки");
	// Настройки.Колонки.Добавить("АтрибутыНастройки");
	Настройки = Новый Структура;
	Возврат Настройки;
КонецФункции

Процедура Справка()
	Сообщить("
|Использование:
|  OSCRIPT main.os команда [параметры запуска]
|	команды:
|		encode - закодировать ROT-13 файл
|			параметры: IN OUT
|		decode - раскодировать файл, переданный вторым параметром
|			параметры: IN OUT
|		both - проверка кодирования/раскодирования файла
|			параметры: IN OUT
|");
	exit(1);
КонецПроцедуры

Процедура Майн()
	Инициализация();
КонецПроцедуры

Майн();