Перем мсИБконн;
Перем мНастройки Экспорт;
Перем либ;
Перем БазовыйКаталог Экспорт;
Перем мРазрешитьИнформационныеСообщения;

//Перем мМенеджерКластера;
Процедура СообщениеСборки(Знач Сообщение) Экспорт
	Если мРазрешитьИнформационныеСообщения Тогда
		Сообщить(Строка(ТекущаяДата()) + " " + Сообщение);
	КонецЕсли;
КонецПроцедуры


Процедура Инициализация()
	ФайлСкрипта = Новый Файл(ТекущийСценарий().Источник);
	БазовыйКаталог = ФайлСкрипта.Путь+"..";
	ПодключитьСценарий(БазовыйКаталог+"\scripts\lib_main.os", "lib");
	либ = Новый lib();
	либ.Инициализировать(ЭтотОбъект);
	мРазрешитьИнформационныеСообщения = (Нрег(либ.ПреобразоватьИмяНастройки("param_debug")) = "true");
	// Сообщить("Аргументов: "+АргументыКоманднойСтроки.Количество());
	// Для каждого нн Из АргументыКоманднойСтроки Цикл
	// 	Сообщить(""+нн);
	// КонецЦикла;
	Если АргументыКоманднойСтроки.Количество() = 1
		И ВРег(АргументыКоманднойСтроки[0]) = "LIST"
		Тогда
		Сообщить("Список описанных информационных баз: ");
		Для каждого кз Из мНастройки Цикл
			Ключ = либ.ПреобразоватьИмяНастройки(кз.Ключ);
			Если Найти(Ключ, "ib_ib") > 0 Тогда
				НомИБ = СтрЗаменить(Ключ, "ib_ib.","");
				Сообщить(""+НомИБ+Символы.Таб+кз.Значение);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "ENCODE"
		Тогда
		Источник = Новый Файл(АргументыКоманднойСтроки[1]);
		Результат = Новый ЗаписьТекста(АргументыКоманднойСтроки[2], КодировкаТекста.UTF8);
		Если Не Источник.Существует() Тогда
			Сообщить("Файл """+Источник.ПолноеИмя+""" не существует");
			Справка();
			Иначе
			Тхт = Новый ЧтениеТекста(Источник.ПолноеИмя, КодировкаТекста.UTF8);
			Сообщить("encoding...");
			Результат.Записать(либ.Энкоде13(Тхт.Прочитать()));
			Результат.Закрыть();
			exit(0);
		КонецЕсли;
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "DECODE"
		Тогда
		Источник = Новый Файл(АргументыКоманднойСтроки[1]);
		Результат = Новый ЗаписьТекста(АргументыКоманднойСтроки[2], КодировкаТекста.UTF8);
		Если Не Источник.Существует() Тогда
			Сообщить("Файл """+Источник.ПолноеИмя+""" не существует");
			Справка();
			Иначе
			Тхт = Новый ЧтениеТекста(Источник.ПолноеИмя, КодировкаТекста.UTF8);
			Сообщить("decoding...");
			Результат.Записать(либ.Декоде13(Тхт.Прочитать()));
			Результат.Закрыть();
			exit(0);
		КонецЕсли;
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "BOTH"
		Тогда
		Источник = Новый Файл(АргументыКоманднойСтроки[1]);
		Результат = Новый ЗаписьТекста(АргументыКоманднойСтроки[2], КодировкаТекста.UTF8);
		Если Не Источник.Существует() Тогда
			Сообщить("Файл """+Источник.ПолноеИмя+""" не существует");
			Справка();
			Иначе
			Тхт = Новый ЧтениеТекста(Источник.ПолноеИмя, КодировкаТекста.UTF8);
			Сообщить("encoding/decoding...");
			Результат.Записать(либ.Декоде13(либ.Энкоде13(Тхт.Прочитать())));
			Результат.Закрыть();
			exit(0);
		КонецЕсли;
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "INDT"
		Тогда
		либ.ЗагрузитьДТ(АргументыКоманднойСтроки[1], АргументыКоманднойСтроки[2]);
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "OUTDT"
		Тогда
		либ.ВыгрузитьДТ(АргументыКоманднойСтроки[1], АргументыКоманднойСтроки[2]);
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "INCF"
		Тогда
		либ.ЗагрузитьCF(АргументыКоманднойСтроки[1], АргументыКоманднойСтроки[2]);
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 3
		И ВРег(АргументыКоманднойСтроки[0]) = "OUTCF"
		Тогда
		либ.ВыгрузитьCF(АргументыКоманднойСтроки[1], АргументыКоманднойСтроки[2]);
	ИначеЕсли АргументыКоманднойСтроки.Количество() = 2
		И ВРег(АргументыКоманднойСтроки[0]) = "DISCONNECT"
		Тогда
		либ.ОтключитьСеансы(АргументыКоманднойСтроки[1]);
	Иначе
		Справка();
	КонецЕсли;	
	
КонецПроцедуры

Функция Настройки() Экспорт
	Настройки = Новый Структура;
	Возврат Настройки;
КонецФункции

Процедура Справка()
	Сообщить("
		|Использование:
		|  OSCRIPT main.os команда [параметры запуска]
		|	команды:
		|	list - перечислить ИБ 
		|	encode - закодировать ROT-13 файл
		|			параметры: IN OUT
		|	decode - раскодировать файл, переданный вторым параметром
		|			параметры: IN OUT
		|	both - проверка кодирования/раскодирования файла
		|			параметры: IN OUT
		|	indt - загрузка dt файла в инф.базу с номером NNN в конф. файле
		|			параметры: NNN DT_FILEPATH
		|	outdt - выгрузка dt файла из инф.базы с номером NNN в конф. файле
		|			параметры: NNN DT_FILEPATH
		|	incf - загрузка конфигурации в инф. базу с номером NNN в конф. файле
		|			параметры: NNN CF_FILEPATH
		|	outcf - сохраниение конфигурации инф. базы с номером NNN в конф. файле 
		|			параметры: NNN CF_FILEPATH
		|	disconnect - отключение сеансов в инф. базе с номером NNN в конф. файле 
		|			параметры: NNN 
		|");
	exit(1);
КонецПроцедуры

Инициализация();
